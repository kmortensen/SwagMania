Last login: Thu Feb 20 13:31:07 on ttys000
Jespers-MacBook-Pro-2:~ PreislersMac$ git add
fatal: Not a git repository (or any of the parent directories): .git
Jespers-MacBook-Pro-2:~ PreislersMac$ git add /users/preislersmac/desktop/
fatal: Not a git repository (or any of the parent directories): .git
Jespers-MacBook-Pro-2:~ PreislersMac$ git show
fatal: Not a git repository (or any of the parent directories): .git
Jespers-MacBook-Pro-2:~ PreislersMac$ git showhelp
git: 'showhelp' is not a git command. See 'git --help'.
Jespers-MacBook-Pro-2:~ PreislersMac$ get help
-bash: get: command not found
Jespers-MacBook-Pro-2:~ PreislersMac$ git help
usage: git [--version] [--help] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and merge with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
Jespers-MacBook-Pro-2:~ PreislersMac$ clone
-bash: clone: command not found
Jespers-MacBook-Pro-2:~ PreislersMac$ git clone
You must specify a repository to clone.

usage: git clone [options] [--] <repo> [<dir>]

    -v, --verbose         be more verbose
    -q, --quiet           be more quiet
    --progress            force progress reporting
    -n, --no-checkout     don't create a checkout
    --bare                create a bare repository
    --mirror              create a mirror repository (implies bare)
    -l, --local           to clone from a local repository
    --no-hardlinks        don't use local hardlinks, always copy
    -s, --shared          setup as shared repository
    --recursive           initialize submodules in the clone
    --recurse-submodules  initialize submodules in the clone
    --template <template-directory>
                          directory from which templates will be used
    --reference <repo>    reference repository
    -o, --origin <name>   use <name> instead of 'origin' to track upstream
    -b, --branch <branch>
                          checkout <branch> instead of the remote's HEAD
    -u, --upload-pack <path>
                          path to git-upload-pack on the remote
    --depth <depth>       create a shallow clone of that depth
    --single-branch       clone only one branch, HEAD or --branch
    --separate-git-dir <gitdir>
                          separate git dir from working tree
    -c, --config <key=value>
                          set config inside the new repository

Jespers-MacBook-Pro-2:~ PreislersMac$ git clone local
fatal: repository 'local' does not exist
Jespers-MacBook-Pro-2:~ PreislersMac$ git
usage: git [--version] [--help] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and merge with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
Jespers-MacBook-Pro-2:~ PreislersMac$ ls
Applications	Downloads	Library		Pictures	danid.log
Desktop		Dropbox		Movies		Public		danid.log.1
Documents	Google Drev	Music		VirtualBox VMs	games
Jespers-MacBook-Pro-2:~ PreislersMac$ cd Desktop/SwagMania/
Jespers-MacBook-Pro-2:SwagMania PreislersMac$ la
-bash: la: command not found
Jespers-MacBook-Pro-2:SwagMania PreislersMac$ ls
123.jpg				Ugeseddel 03-tir&tor.pdf
Jespers-MacBook-Pro-2:SwagMania PreislersMac$ touch test
Jespers-MacBook-Pro-2:SwagMania PreislersMac$ ls
123.jpg				Ugeseddel 03-tir&tor.pdf	test
Jespers-MacBook-Pro-2:SwagMania PreislersMac$ em
emacs           emacs-undumped  emacsclient     emond           
Jespers-MacBook-Pro-2:SwagMania PreislersMac$ emacs test

yolo swag











































-uuu:**-F1  test           All (1,9)      (Fundamental)------------------------------------------------------------
Auto-saving...done
